Docker Compose:
Es una herramienta que se utiliza para definir y ejecutar aplicaciones Docker
multi-contenedor. Permite definir la configuración de una aplicación utilizando
un archivo YAML llamado docker-compose.yml, donde se especifican los servicios,
redes y volúmenes que componen la aplicación.

Docker Compose simplifica el proceso de administración de aplicaciones Docker
multi-contenedor al permitirte definir, ejecutar y administrar servicios de
aplicación utilizando un solo archivo de configuración.

Ejemplo: Supongamos que tienes una aplicación web compuesta por dos servicios:
Un servidor web (servicio web) y una base de datos (servicio db).
Crearías un archivo docker-compose.yml con la siguiente estructura:

version: '3'

services:
  web:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./html:/usr/share/nginx/html
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword

En este ejemplo, se definen dos servicios: web y db. 
El servicio web utiliza la imagen de Nginx, mapea el puerto 8080 del host al
puerto 80 del contenedor y monta el directorio ./html del host en el
directorio /usr/share/nginx/html del contenedor.
El servicio db utiliza la imagen de MySQL y establece algunas variables de entorno
para configurar la base de datos.

Una vez que tengas tu archivo docker-compose.yml, puedes ejecutar los servicios
utilizando el siguiente comando en el directorio donde se encuentra el archivo:

$ docker-compose up

Esto iniciará todos los servicios definidos en el archivo docker-compose.yml.
Si deseas ejecutar los servicios en segundo plano, puedes agregar la opción -d:

$ docker-compose up -d

Este es solo un ejemplo básico de cómo usar Docker Compose.
La herramienta ofrece muchas más características, como la capacidad de
construir imágenes, escalar servicios, administrar volúmenes y redes, entre otras.

El comando docker-compose down se utiliza para detener y eliminar los contenedores,
las redes y los volúmenes asociados a una aplicación Docker definida en el archivo
docker-compose.yml.

Detiene y elimina los contenedores, las redes y los volúmenes asociados a una
aplicación Docker definida en el archivo docker-compose.yml.
Ejemplo: Supongamos que estás en el directorio donde se encuentra tu archivo
docker-compose.yml y deseas detener y eliminar todos los recursos asociados
a tu aplicación Docker. Ejecutarías el siguiente comando:

$ docker-compose down

Este comando detendrá y eliminará todos los contenedores, redes y volúmenes creados
por Docker Compose en el directorio actual.

Es importante tener en cuenta que docker-compose down solo eliminará los recursos
que fueron creados con docker-compose up o docker-compose run en el mismo directorio
donde se ejecuta el comando. Si tienes recursos de Docker que no están gestionados
por Docker Compose en ese directorio, no se verán afectados por este comando.