Docker Create:
Se utiliza para crear un nuevo contenedor Docker, pero no lo inicia.
Crea un nuevo contenedor Docker, pero no lo ejecuta.

Ejemplo: Supongamos que deseas crear un nuevo contenedor basado en la imagen de Ubuntu.
Ejecutarías el siguiente comando:

$ docker create ubuntu

Esto creará un nuevo contenedor basado en la imagen de Ubuntu, pero no se iniciará.
Para iniciar este contenedor posteriormente, puedes usar el comando docker start seguido del
ID del contenedor:

$ docker start <container_id>

Recuerda que al crear un contenedor con docker create, debes iniciar el contenedor
manualmente con docker start para que comience a ejecutarse.

El comando docker create --name se utiliza para crear un nuevo contenedor Docker con un
nombre especificado pero sin iniciarlo. Crea un nuevo contenedor Docker con un nombre
especificado pero sin iniciarlo.
Ejemplo: Supongamos que deseas crear un nuevo contenedor con el nombre "mi_contenedor" basado en la imagen de Ubuntu. Ejecutarías el siguiente comando:

$ docker create --name mi_contenedor ubuntu

Esto creará un nuevo contenedor con el nombre "mi_contenedor" basado en la imagen de Ubuntu,
pero no se iniciará automáticamente.
Luego, para iniciar este contenedor, puedes usar el comando docker start mi_contenedor.

El comando docker create -p se utiliza para crear un nuevo contenedor Docker y mapear
puertos del contenedor al host. Crea un nuevo contenedor Docker y mapea puertos
del contenedor al host.
Supongamos que deseas crear un nuevo contenedor basado en la imagen de nginx y
mapear el puerto 80 del contenedor al puerto 8080 del host. Ejecutarías el siguiente comando:

$ docker create -p 8080:80 nginx

Esto creará un nuevo contenedor utilizando la imagen de nginx y mapeará el puerto 80 del
contenedor al puerto 8080 del host. Ahora puedes iniciar este contenedor utilizando el
comando docker start para que comience a ejecutarse.